<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>SwiftDrop - Seamless File Sharing</title>
    <style>
      body {
        margin: 0;
        padding: 0;
        height: 100vh;
        font-family: 'Segoe UI', sans-serif;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background: linear-gradient(270deg, #f6f9fc, #dbefff, #fcefee);
        background-size: 600% 600%;
        animation: backgroundShift 20s ease infinite;
        position: relative;
        overflow-x: hidden;
      }

      @keyframes backgroundShift {
        0% {
          background-position: 0% 50%;
        }
        50% {
          background-position: 100% 50%;
        }
        100% {
          background-position: 0% 50%;
        }
      }

      .brand-logo {
        position: fixed;
        top: 15px;
        left: 20px;
        display: flex;
        align-items: center;
        gap: 10px;
        z-index: 99;
        background: rgba(255, 255, 255, 0.75);
        padding: 6px 12px;
        border-radius: 12px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      .brand-logo img {
        height: 36px;
        width: auto;
      }

      .brand-logo span {
        font-weight: bold;
        font-size: 20px;
        color: #333;
        font-family: 'Segoe UI', cursive;
      }

      .upload-section {
        flex: 1.3;
        max-width: 700px;
        padding: 50px;
      }

      .upload-box {
        background: #fff;
        border-radius: 20px;
        padding: 50px 40px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
        position: relative;
      }

      .upload-box h1 {
        font-size: 26px;
        color: #333;
        margin-bottom: 25px;
      }

      .form-group {
        margin-bottom: 20px;
      }

      label {
        display: block;
        font-weight: 600;
        margin-bottom: 8px;
        color: #444;
      }

      input[type='file'],
      input[type='text'],
      input[type='email'],
      textarea {
        width: 100%;
        padding: 10px 14px;
        border-radius: 10px;
        border: 1px solid #ccc;
        font-size: 14px;
        outline: none;
      }

      textarea {
        resize: vertical;
        min-height: 60px;
      }

      input:focus,
      textarea:focus {
        border-color: #6b9dfc;
      }

      #fileInfo {
        font-size: 14px;
        color: #555;
        margin-top: 5px;
      }

      #cancelFileBtn {
        display: none;
        padding: 14px 20px; /* Same as upload button */
        background: #f56565;
        border: none;
        color: white;
        font-size: 16px;
        border-radius: 12px;
        cursor: pointer;
        transition: background 0.3s ease;
      }

      #cancelFileBtn:hover {
        background: #ff3b3b; /* Brighter red on hover */
      }

      .actions {
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      button {
        padding: 12px 20px;
        background: #6b9dfc;
        border: none;
        color: white;
        font-size: 16px;
        border-radius: 12px;
        cursor: pointer;
        transition: background 0.3s ease;
      }

      button:hover {
        background: #417ff7;
      }

      .dropdown {
        position: relative;
        display: inline-block;
      }

      .dropbtn {
        background: transparent;
        border: none;
        font-size: 24px;
        cursor: pointer;
      }

      .dropdown-content {
        display: none;
        position: absolute;
        right: 0;
        background-color: #fff;
        min-width: 140px;
        box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.15);
        border-radius: 8px;
        z-index: 1;
      }

      .dropdown-content a {
        padding: 10px 16px;
        display: block;
        text-decoration: none;
        color: #444;
        font-size: 14px;
      }

      .dropdown-content a:hover {
        background-color: #f1f1f1;
      }

      .dropdown:hover .dropdown-content {
        display: block;
      }

      #uploadStatus {
        margin-top: 20px;
        color: #333;
        font-size: 14px;
      }

      .quote-section {
        flex: 1;
        padding: 40px;
        text-align: center;
      }

      .quote-section img {
        width: 100%;
        max-width: 700px;
        border-radius: 20px;
        margin-bottom: 20px;
        transition: opacity 0.8s ease-in-out;
      }

      .quote-text {
        font-size: 18px;
        font-style: italic;
        color: #555;
        min-height: 80px;
        opacity: 1;
        transition: opacity 0.6s ease-in-out;
      }

      .quote-text.fade-out,
      .quote-section img.fade-out {
        opacity: 0;
      }

      .quote-text.fade-in,
      .quote-section img.fade-in {
        opacity: 1;
      }

      @media screen and (max-width: 800px) {
        body {
          flex-direction: column;
          padding: 20px;
        }

        .upload-section,
        .quote-section {
          max-width: 100%;
          width: 100%;
        }

        .quote-section img {
          max-width: 100%;
        }
      }
    </style>
  </head>
  <body>
    <!-- Brand Logo -->
    <div class="brand-logo">
      <img
        src="https://cdn-icons-png.flaticon.com/512/860/860814.png"
        alt="logo"
      />
      <span>SwiftDrop</span>
    </div>

    <!-- Upload Section -->
    <div class="upload-section">
      <div class="upload-box">
        <h1>üöÄ Transfer With Ease!</h1>

        <!-- Upload File First -->
        <div class="form-group">
          <label for="file">Select a file</label>
          <input type="file" name="file" id="file" required />
          <div id="fileInfo"></div>
          <button id="cancelFileBtn" type="button">Cancel</button>
          <button id="uploadBtn" type="button">‚¨Ü Upload File</button>
        </div>

        <!-- Hidden input to store uploaded file URL -->
        <input type="hidden" id="uploadedFileUrl" name="uploadedFileUrl" />

        <!-- Email Form (disabled initially until upload is successful) -->
        <form id="emailForm" style="display: none">
          <div class="form-group">
            <label for="title">Title (max 20 chars)</label>
            <input
              type="text"
              name="title"
              id="title"
              maxlength="20"
              placeholder="File title..."
              required
            />
          </div>
          <div class="form-group">
            <label for="message">Message (max 100 chars)</label>
            <textarea
              name="message"
              id="message"
              maxlength="100"
              placeholder="Optional message..."
            ></textarea>
          </div>
          <div class="form-group">
            <label for="emailFrom">Your Email</label>
            <input
              type="email"
              name="emailFrom"
              id="emailFrom"
              placeholder="you@example.com"
              required
            />
          </div>
          <div class="form-group">
            <label for="emailTo">Send To (max 3 emails)</label>
            <input
              type="email"
              name="emailTo"
              id="emailTo"
              placeholder="recipient1@example.com, recipient2@example.com"
              required
            />
          </div>
          <div class="actions">
            <button type="submit">‚ú® Send Email</button>
            <div class="dropdown">
              <button class="dropbtn">‚ãÆ</button>
              <div class="dropdown-content">
                <a href="#" onclick="handleShortLink()">Create Short Link</a>
              </div>
            </div>
          </div>
        </form>
        <div id="uploadStatus"></div>
      </div>
    </div>

    <!-- Quote Section -->
    <div class="quote-section">
      <img
        src="https://i.postimg.cc/kXfNzPGX/q1.jpg"
        alt="Motivational Image"
        id="quoteImage"
      />
      <div class="quote-text fade-in" id="quoteText">
        "Creativity is intelligence having fun." ‚Äì Albert Einstein
      </div>
    </div>

    <!-- Scripts -->
    <script>
      const fileInput = document.getElementById('file');
      const fileInfo = document.getElementById('fileInfo');
      const cancelBtn = document.getElementById('cancelFileBtn');
      const uploadBtn = document.getElementById('uploadBtn');
      const emailForm = document.getElementById('emailForm');
      const uploadStatus = document.getElementById('uploadStatus');
      const uploadedFileUrlInput = document.getElementById('uploadedFileUrl');

      fileInput.addEventListener('change', () => {
        if (fileInput.files.length > 0) {
          fileInfo.textContent = `Selected: ${fileInput.files[0].name}`;
          cancelBtn.style.display = 'inline-block';
          uploadBtn.style.display = 'inline-block';
        } else {
          fileInfo.textContent = '';
          cancelBtn.style.display = 'none';
          uploadBtn.style.display = 'none';
        }
      });

      cancelBtn.addEventListener('click', () => {
        fileInput.value = '';
        fileInfo.textContent = '';
        cancelBtn.style.display = 'none';
        uploadBtn.style.display = 'none';
        emailForm.style.display = 'none';
        uploadedFileUrlInput.value = '';
        uploadStatus.innerText = '';
      });

      uploadBtn.addEventListener('click', async () => {
        const file = fileInput.files[0];
        if (!file) return alert('Please select a file first!');

        uploadStatus.innerText = '‚è≥ Uploading...';
        const formData = new FormData();
        formData.append('file', file);

        try {
          const response = await fetch('/api/files/upload', {
            method: 'POST',
            body: formData,
          });

          const result = await response.json();

          if (response.ok && result.fileUrl) {
            uploadStatus.innerText = '‚úÖ File uploaded successfully!';
            uploadedFileUrlInput.value = result.fileUrl;
            emailForm.style.display = 'block';
          } else {
            uploadStatus.innerText = `‚ùå ${
              result.error || 'Upload failed. Try again.'
            }`;
          }
        } catch (err) {
          uploadStatus.innerText = '‚ùå Upload error. Please try again.';
          console.error(err);
        }
      });

      emailForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const payload = {
          title: document.getElementById('title').value,
          message: document.getElementById('message').value,
          emailFrom: document.getElementById('emailFrom').value,
          emailTo: document.getElementById('emailTo').value,
          fileUrl: uploadedFileUrlInput.value,
        };

        try {
          uploadStatus.innerText = 'üìß Sending email...';
          const res = await fetch('/api/files/send', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(payload),
          });

          const result = await res.json();
          if (result.success) {
            uploadStatus.innerText = '‚úÖ Email sent successfully!';
            emailForm.reset();
            fileInput.value = '';
            uploadedFileUrlInput.value = '';
            emailForm.style.display = 'none';
          } else {
            uploadStatus.innerText = '‚ùå Failed to send email.';
          }
        } catch (err) {
          uploadStatus.innerText = '‚ùå Error sending email.';
          console.error(err);
        }
      });

      function handleShortLink() {
        const link = uploadedFileUrlInput.value;
        if (!link) {
          alert('Upload file first to generate a short link.');
        } else {
          alert('Short link feature will be added soon!\nLink: ' + link);
        }
      }

      // Rotating Quotes Logic (unchanged)
      const quotes = [
        'Creativity is intelligence having fun. ‚Äì Albert Einstein',
        'Simplicity is the soul of efficiency. ‚Äì Austin Freeman',
        'The best way to get started is to quit talking and begin doing. ‚Äì Walt Disney',
        'Do something today that your future self will thank you for.',
        'Your limitation‚Äîit‚Äôs only your imagination.',
        'Push yourself, because no one else is going to do it for you.',
        'Dream it. Wish it. Do it.',
      ];
      const quoteImages = [
        'https://i.postimg.cc/kXfNzPGX/q1.jpg',
        'https://i.postimg.cc/jqGCj81Q/q2.jpg',
        'https://i.postimg.cc/ryWMfqhx/q3.jpg',
        'https://i.postimg.cc/ZKT26mXT/q4.jpg',
        'https://i.postimg.cc/d3Q6Zs3p/q5.jpg',
      ];
      let lastQuoteIndex = 0;
      let lastImageIndex = 0;

      function rotateQuotes() {
        const quoteEl = document.getElementById('quoteText');
        const quoteImg = document.getElementById('quoteImage');

        quoteEl.classList.remove('fade-in');
        quoteEl.classList.add('fade-out');
        quoteImg.classList.remove('fade-in');
        quoteImg.classList.add('fade-out');

        setTimeout(() => {
          let newQuoteIndex;
          do {
            newQuoteIndex = Math.floor(Math.random() * quotes.length);
          } while (newQuoteIndex === lastQuoteIndex);
          lastQuoteIndex = newQuoteIndex;
          quoteEl.textContent = quotes[newQuoteIndex];

          let newImageIndex;
          do {
            newImageIndex = Math.floor(Math.random() * quoteImages.length);
          } while (newImageIndex === lastImageIndex);
          lastImageIndex = newImageIndex;
          quoteImg.src = quoteImages[newImageIndex];

          quoteEl.classList.remove('fade-out');
          quoteEl.classList.add('fade-in');
          quoteImg.classList.remove('fade-out');
          quoteImg.classList.add('fade-in');
        }, 500);
      }

      setInterval(rotateQuotes, 5000);
    </script>
  </body>
</html>
